<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
<link rel="stylesheet" type="text/css" title="Default" href="abner.css"/> 
<title>ABNER: A Biomedical Named Entity Recognizer</title>

<meta name="description" content="A state of the art text analysis tool for molecular biology."/>
<meta name="keywords" content="ABNER, natural language processing, information extraction, named entity recognition, NER, conditional random fields, CRFs, GENIA, biology, biomedical, protein, DNA, RNA, cell line, cell type"/>

</head>
<body>

<div id="wrapper">

<h1>ABNER: A Biomedical Named Entity Recognizer</h1>

<div id="alert"><b>Version 1.5 released!</b> The new version sports
performance improvements, more customizability, plus a new API to
train ABNER on other corpora and incorporate them into your
systems.</div>

<p>ABNER is a software tool for molecular biology text analysis. It
began as a user-friendly interface for a system developed as part of
the <a href="http://www.genisis.ch/~natlang/JNLPBA04/">NLPBA/BioNLP
2004 Shared Task</a> challenge. The details of that system are
described in the paper below (<a
href="/~bsettles/pub/settles.nlpba04.pdf">Settles, 2004</a>).</p>

<p>At ABNER's core is a statistical machine learning system using
linear-chain conditional random fields (CRFs) with a variety of
orthographic and contextual features. Version 1.5 includes two models
trained on the <b>NLPBA</b> and <b>BioCreative</b> corpora, for which
performance is roughly state of the art (F1 scores of
<b>70.5</b> and <b>69.9</b> respectively; details <a
href="#performance">here</a>). The new version also includes a Java
API allowing users to incorporate ABNER into their systems, as well as
train and use models for other data. Here's a pretty screenshot:</p>

<div align="center">
<img width="584" height="467" border="0" alt="[ABNER screenshot]"src="screenshot.gif"/>
</div>

<h3>Features.</h3>

<ul>
<li>Simultaneously recognize multiple named entities (2 trained models included).</li>
<li>Intuitive, interactive user interface.</li>
<li>Optional built-in tokenization and sentence segmentation algorithms, robust to wrapped lines and biomedical abbreviations.</li>
<li>Open text files and save annotations (SGML, IOB, and ABNER formats supported).</li>
<li>Directory-recursive batch annotation of text files.</li>
<li>Java API to incorporate ABNER into customized biomedical text applications.</li>
<li>API includes routines for training ABNER on new corpora.</li>
</ul>

<h3>Download and Legalese.</h3>

<p><b>ABNER v1.5</b> (March 2005) is available as a bundled Java
archive: <a href="abner.jar">abner.jar</a> (9.5mb). <br/><i>To run
it:</i> execute this command from a terminal: <tt>java [-Xmx100m] -jar
abner.jar</tt></p>

<p><b>Documentation</b> for the API is available <a
href="javadoc/">here</a> (javadoc).<br/> <b>Java source code</b> is
available as a gzipped tarball: <a
href="abner-1.5.tar.gz">abner-1.5.tar.gz</a> (32.8kb).  <br/><i>Note:</i>
You don't need the source to access the API, just make sure
"abner.jar" is in your classpath.</p>

<p>This software &copy; 2004 by <a
href="http://www.cs.wisc.edu/~bsettles/">Burr Settles</a>, Department
of <a href="http://www.cs.wisc.edu">Computer Sciences</a>, University
of Wisconsin-Madison. It is provided "as is," with <i>no
representations or warranties</i> of any kind. ABNER is now "open
source" and released under the terms of the <a
href="http://www.opensource.org/licenses/cpl.php">Common Public
License</a>. You are free to use the code under those terms. Of
course, an acknowledgement is always a good idea:</p>

<blockquote>
B. Settles (2005). ABNER: an open source tool for automatically tagging
genes, proteins, and other entity names in
text. <i>Bioinformatics</i>, 21(14):3191-3192.
</blockquote>


<p>Here is a BibTeX entry if you dig that sort of thing:</p>

<blockquote>
<pre>
@article{settles.bioinf05,
    Author = {B. Settles},
    Journal = {Bioinformatics},
    Number = {14},
    Pages = {3191--3192},
    Title = {{ABNER}: An open source tool for automatically tagging genes, 
        proteins, and other entity names in text},
    Volume = {21},
    Year = 2005}
</pre>
</blockquote>

<h3>System Requirements.</h3>

<p>The bundled ABNER application is platform-independent, though it
requires the <a
href="http://java.sun.com/j2se/downloads/index.html">Java 2 (J2SE)</a>
environment to be installed. It has been tested on
<b>Linux</b>, <b>Windows XP</b>, <b>Solaris</b>, and <b>Mac OSX</b>. A
modern processor (500MHz+) and 256MB+ of RAM is
recommended. <i>Note:</i> If you plan to modify and compile the source
code yourself, you will first need the <a
href="http://java.sun.com/j2ee/download.html">Java SDK 1.4</a>, <a
href="http://mallet.cs.umass.edu">MALLET 0.3.1</a>, and <a
href="http://www.cs.princeton.edu/~appel/modern/java/JLex/">JLex</a>
to be installed and working.</p>


<a name="performance"></a>
<h3>Performance.</h3>

<p>The following are complete results for the two trained models
included with ABNER v1.5 on their corresponding evaluation corpora
using <i>exact boundary</i> matching. ("S-F1" refers to <i>soft</i> F1
scores where at least one boundary is correct, but a one-word error on
one side is tolerated.)</p>

<div align="center">
<table>
<tr class="hilite"><th>Entity</th><th>Recall</th><th>Precision</th><th>F1</th><th>(S-F1)</th></tr>
<tr><td class="special">Protein</td><td>77.8</td><td>68.1</td><td>72.6</td><td>(84.9)</td></tr>
<tr><td class="special">DNA</td><td>63.1</td><td>67.2</td><td>65.1</td><td>(76.1)</td></tr>
<tr><td class="special">RNA</td><td>61.9</td><td>61.3</td><td>61.6</td><td>(78.5)</td></tr>
<tr><td class="special">Cell Line</td><td>58.2</td><td>53.9</td><td>56.0</td><td>(68.2)</td></tr>
<tr><td class="special">Cell Type</td><td>65.6</td><td>79.8</td><td>72.0</td><td>(82.1)</td></tr>
<tr><td class="special">Overall</td><td>72.0</td><td>69.1</td><td>70.5</td><td>(82.0)</td></tr>
</table>
<b>NLPBA model</b>. Five entities trained on 18,546 sentences, evaluated on 3,856.
</div>
<br/>

<div align="center">
<table>
<tr class="hilite"><th>Entity</th><th>Recall</th><th>Precision</th><th>F1</th><th>(S-F1)</th></tr>
<tr><td class="special">Protein</td><td>65.9</td><td>74.5</td><td>69.9</td><td>(83.7)</td></tr>
</table>
<b>BioCreative model</b>. One entity (subsuming genes and gene products)<br/>trained on 7,500 sentences, evaluated on 2,500.
</div>



<h3>History.</h3>

<ul>

<li>March 2005 - <b>ABNER v1.5</b>. (Combined NLPBA and BioCreative
models, improved performance, made tokenization optional, introduced
API, released open source.)</li>

<li>July 2004 - <b>YAGI v1.0</b>. (A command-line tool trained on the
BioCreative corpus.)</li>

<li>June 2004 - <b>ABNER v1.0</b>. (GUI wrapper for the original NLPBA system.)</li>
</ul>

<h3>Bugs.</h3>

<p>If you encounter a <tt>java.lang.OutOfMemoryError</tt>, you may
need to increase set your JVM's memory allocation (100MB seems to work
well). To do this at the command line: <tt>java -Xmx100m -jar
abner.jar</tt></p>

<p>Otherwise, I know of no bugs (yet). If you discover any, or would
like to contribute fixes and/or functional improvements, please
contact:
<tt>bsettles&#64;&#99;s&#46;&#119;i&#115;&#99;&#46;&#101;d&#117;</tt>.</p>

<h3>Similar Software.</h3>

<p>I am aware of a few other publicly available biomedical NER
programs. ABNER is known to perform as well or better on comparable
corpora, and is open-source with a customizable API.</p>

<ul>
<li>GAPSCORE (Chang et al., 2004) - <a href="http://bionlp.stanford.edu/gapscore/">http://bionlp.stanford.edu/gapscore/</a></li>
<li>LingPipe (Alias-i Inc., 2003) - <a href="http://www.alias-i.com/lingpipe/">http://www.alias-i.com/lingpipe/</a></li>
<li>AbGene (Tanabe &amp; Wilbur, 2002) - <a href="ftp://ftp.ncbi.nlm.nih.gov/pub/tanabe/AbGene/">ftp://ftp.ncbi.nlm.nih.gov/pub/tanabe/AbGene/</a></li>
<li>KeX (Fukuda et al., 1998) - <a href="http://www.hgc.jp/service/tooldoc/KeX/intro.html">http://www.hgc.jp/service/tooldoc/KeX/intro.html</a></li>
</ul>

<h3>Acknowledgements.</h3>

<p>Thanks to Mark Craven for his advice, and Andrew McCallum and Aron
Culotta for answering questions about MALLET (The toolkit that
implements the CRF). Research related to this software was supported
by NLM grant 5T15LM007359 and NIH grant R01 LM07050-01.</p>


<p><a href="http://www.azoft.com/people/seremina/edu/abner-rom.html">View this page in Romanian</a> courtesy of <a href="http://www.azoft.com/">azoft</a></p>

<h3>References.</h3>

<ul>


<li>B. Settles (2005).  <a
href="http://www.cs.wisc.edu/~bsettles/pub/settles.bioinf05.pdf">ABNER:
an open source tool for automatically tagging genes, proteins, and
other entity names in text</a>. <i>Bioinformatics</i>,
21(14):3191-3192., 2005.</li>

<li>B. Settles (2004). <a
href="http://www.cs.wisc.edu/~bsettles/pub/settles.nlpba04.pdf">Biomedical
Named Entity Recognition Using Conditional Random Fields and Rich
Feature Sets</a>. In <i>Proceedings of the International Joint Workshop
on Natural Language Processing in Biomedicine and its Applications
(NLPBA)</i>, Geneva, Switzerland, pages 104-107.</li>

<li>J. Lafferty, A. McCallum, &amp; F. Pereira (2001). <a
href="http://citeseer.ist.psu.edu/lafferty01conditional.html">Conditional
Random Fields: Probabilistic Models for Segmenting and Labeling
Sequence Data</a>. In <i>Proceedings of the International Conference
on Machine Learning (ICML)</i>, Williamstown, MA, USA, pages 282-289.</li>

</ul>

</div>

<script src="http://www.google-analytics.com/urchin.js" 
type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-639185-3";
urchinTracker();
</script>

</body>
</html>
