<html>
	<head>
		<title>CASS (Coarse-grained Artificial Sequence simulator)</title>
	</head>
	<body>
		<div style="width:780px; margin-left: auto; margin-right: auto">
			<div>
				<h2>CASS (Coarse-grained Artificial Sequence Simulator) 1.1</h2>
			</div>

			<div>
				<div style="width:300px; height:393px; float:left">
					<img src="web-fig-method-lores.png">
				</div>

				<p> 
				CASS is a software package for simulating and sampling protein sequences with an
				explicit genotype-to-phenotype map. The molecular phenotypes under consideration are
				folding into a specific conformation, and function in the sense of binding one or
				more ligands. Using these biophysically motivated restrictions, CASS produces
				sequences with protein-like properties such as core hydrophobicity and a
				biologically relevant distribution of evolutionary rates.
				</p>
				<p>
				CASS 1.0 was written by Johan Grahnen
				in object-oriented C++ and is encapsulated in a collection 
				of classes for ease of integration with existing software. It is open-source and freely
				available under the <a href="http://www.gnu.org/copyleft/gpl.html">GPL v3 license</a>.
				</p>
				<p>
				CASS 1.1 and up is maintained by <a href="mailto:tuf77157@temple.edu">David Liberles</a> with contributions from Nadia Bykova.
				</p>
				<p>CASS 1.1s, with site-specific weights is now available below in updates, with contributions from Peter Chi, Jason Lai, 
Dohyup Kim, and Nadia Bykova.</p>
			</div>

			<div style="clear:both; margin-top:2em">

				<h3> Navigation </h3>
				<ul>
					<li><a href="#Download">Download</a>
					<li><a href="#Install">Installation</a>
					<li><a href="#Test">Testing Your Installation</a>
					<li><a href="#Usage">Usage</a>
					<li><a href="#Trouble">Troubleshooting</a>
					<li><a href="#Update">Updates</a>
					<li><a href="#Refs">References</a>
				</ul>

				<a name="Download"><h3> Download </h3></a>
				<p> 
				We supply CASS 1.1 as a compressed archive containing the C++ source code,
				example data files, some helpful scripts and brief documentation.
				Why not <a href="cass-1.1.tar.gz">download CASS</a> and try it out right 
				now? Refer to the <a href="#Refs">paper describing the algorithm</a> and 
				this web page for further details.
				</p>

				<a name="Install"><h3> Installation </h3></a>
				<p> 
				To compile from source, verify that your system supports GNU make and has 
				GCC version 4.3 or better installed. Then unpack the archive and type
				</p>

				<p style="font-family:monospace">
				make all
				</p>

				<p>
				to compile the source code. To remove the object files after finishing, 
				type
				</p>

				<p style="font-family:monospace">
				make clean
				</p>

				<p>
				Note that support for the <a href="http://en.wikipedia.org/wiki/C%2B%2B11">C++0X/C++11 standard</a>
				is required. If you are having trouble with compilation, see the <a href="#Trouble">section on "Troubleshooting"</a>. 
				To date, CASS has been successfully compiled and tested on various 64-bit
				Linux systems with GCC 4.3-4.6 (see README for complete list).
				</p>


				<p>
				For problems with compiling the pseudo-random number generator files
				(<code>randomc.h</code>, <code>stocc.h</code>, <code>mersenne.cpp</code> and 
				<code>stoc1.cpp</code>), refer to the documentation 
				on <a href="http://www.agner.org/random/">Agner Fog's web page</a>.
				</p>

				<p>
				Finally, please consult the included README file for further instructions.
				</p>

				<a name="Test"><h3> Testing Your Installation </h3></a>
				<p> 
				For a test of the compiled software, run the following command as a single line:
				</p>

				<p style="font-family:monospace">
				./sh2-evolution-decoys+neo 1d4tA-novel.pheno 10 100 0.0032 -60 -19 data/1d4tA-renum.bead data/1d4tA.dna data/1d4tB.bead data/decoy-ligand-RLPTIYICITG.bead data/novel-ligand-GEPTIYTGVIH.bead > 1d4tA-novel.seq
				</p>

				This may take some time to complete. When finished, the output file 
				<code>'1d4tA-novel.pheno'</code> should contain 6 tab-separated columns on 12 lines, 
				ending with <code>'#Simulation finished.'</code>.

				<a name="Usage"><h3> Usage </h3></a>
				<p> 
				A number of basic and advanced uses of the software package are described in the
				README file. Here we list a few typical tasks and the supplied example applications 
				that can be used to perform them.
				<ul>
					<li>
					<p>
					<b>Task:</b> Simulating protein sequence evolution with explicit selection to
					fold into the native conformation and maintain native function.
					</p>
					<p>
					The <code>sh2-evolution-decoys</code> program implements the model described
					in <a href="#Refs">reference #1</a> for sequence simulation. See Basic example 
					#7 in the README for more detail.
					</p>
					</li>

					<li>
					<p>
					<b>Task:</b> Simulation of protein sequence evolution under changing function.
					</p>
					<p>
					As described in <a href="#Refs">reference #3</a>, the <code>sh2-evolution-decoys+neo</code>
					program implements a model of acquiring novel functionality while maintaining the
					original function. See Advanced example #2 in the README for more detail.
					</p>
					</li>
					
					<li>
					<p>
					<b>Task:</b> Stability-biased sampling of near-native protein sequences.
					</p>
					<p>
					The <code>sample-seqs</code> program implements a Markov chain Monte Carlo
					algorithm for generating protein sequences that are scored as more
					thermodynamically stable than the native sequence of a protein under a
					particular model. See Advanced example #4 in the README for more detail.
					</p>
					</li>
				</ul>
				</p>

				<a name="Trouble"><h3> Troubleshooting </h3></a>
				<p> 

				<ul>
					<li> 
					<p>
					<b>Problem:</b> When installing, I get an error message to the effect of 
					'error:	unrecognized command line option "-std=c++0x"' or errors/warnings
					about 'shared_ptr'.
					</p>

					<p>
					Your version of GCC likely does not support the C++0X/C++11 standard. Run
					</p>

					<p style="font-family:monospace">
					gcc -v
					</p>

					<p>
					to check what version is installed. There was no support for
					<code>&lt;tr1/memory&gt;</code> before version 4.3: please upgrade your 
					compiler to version 4.3 or newer if possible. In particular, the 
					<code>&lt;tr1/memory&gt;</code> library must exist and shared_ptr must be 
					available in the standard namespace. See 
					<a href="http://www.aristeia.com/C++0x/C++0xFeatureAvailability.htm">Scott Meyer's summary</a>
					for a listing of compatible compiler versions. We cannot currently support any 
					configurations beyond Linux with GCC 4.3 or better, but the code should 
					theoretically compile on any Unix-based system (such as MacOS) with the correct 
					compiler version. 

					<p> 
					For more information about compiling with shared_ptr, <a href="http://www.codesynthesis.com/~boris/blog/2010/05/24/smart-pointers-in-boost-tr1-cxx-x0/">Boris Kolpackov's blog</a>
					has specific information on how to access the template in other compilers and earlier versions of GCC. 	
					</p>

					<p>
					Finally, please <a href="mailto:tuf77157@temple.edu">contact the maintainer</a> 
					if you are unable to resolve installation problems using the above information.
					</p>
					</li>

					<li>
					<p>
					<b>Problem:</b> Program crashes saying "Can't convert to TwoBeadStructure: residue 1 
					has no C-alpha atom!".
					</p>

					<p>
					This is likely a parsing error. Confirm that your input structures
					conform to the format exemplified in <code>data/1d4tA-renum.bead</code> and 
					<code>data/1d4tB.bead</code>. The problem could also be caused by reading an 
					empty or non-existent input structure. Verify that the input file exists and 
					that you have read permissions.
					</p>

					</li>

					<li>
					<p>
					<b>Problem:</b> Program crashes with the message "FATAL ERROR: Could not parse 
					structure file".
					</p>

					<p>
					See previous problem.
					</p>

					</li>

					<li>
					<p>
					<b>Problem:</b> Program crashes with message "FATAL ERROR: Could not open output 
					file".
					</p>

					<p>
					You may not have write permissions on the output file. Verify that
					you can write to it by e.g. editing it in a text editor and saving.
					</p>
					</li>
					
					<li>
					<p>
					<b>Problem:</b> When running the <code>test-motifs</code> executable, nothing
					happens. Alternatively, the terminal hangs or the session crashes.
					</p>

					<p>
					This program requires the third-party software 
					<a href="http://dunbrack.fccc.edu/scwrl4/">SCWRL</a> to be installed, and
					some modification of the code. We recommend using v 3.0, but v 4.0 has also
					been successfully tested. Note that <code>test-motifs</code> launches a
					large number of child processes, which may have some unintended consequences.
					See the README file for more details.
					</p>
					</li>

					<li>
					<p>
					<b>Problem:</b> Simulations, particularly with large population sizes, take a 
					very long time (or a program seems frozen).
					</p>

					<p>
					The CASS algorithm is a highly complex method for simulating sequence evolution
					under biophysical constraints, and as such is very computationally intensive.
					Simulations may take hours, days or even weeks to complete, depending on
					the properties of the simulated population. To gauge progress of an
					ongoing simulation, examine the phenotype output file. It contains one
					line per completed generation, and can therefore be easily monitored using
					<code>wc</code> or a similar utility program.
					</p>
					</li>
				</ul>
				</p>

				<a name="Update"><h3> Updates </h3></a>
				<ul>
					
<li> 11/7/2017 A new version which allows for site-specific estimation of weight terms is available here: <a href="CASS1.1s.tar.gz">CASS v 1.1s</a>, which can be installed using the same instructions as above. Instructions for site-specific weight estimation are contained in the README file. Also, R code for analyses performed in Chi et al. can be found here: <a href="Rcode.tar.gz">R code</a>.</li><p>
<li>
					5/21/2013 v 1.1 was released (bug fix release).
					<p>
					When calculating the distance between C&alpha; and C&beta; beads, v.1.0 was 
					calculating them in just one direction. v 1.1 measures the distances in 
					both directions.
					</li>
					<li>
					The previous version of CASS can be found here: <a href="cass-1.0.tar.gz">CASS v 1.0</a>.
					</li>
				</ul>

				<a name="Refs"><h3> References </h3></a>
				<p> 
				<ol>
					<li> Grahnen et al (2011) <a href="http://www.biomedcentral.com/1471-2148/11/361/abstract">"Biophysical and Structural Considerations for Protein Sequence Evolution"</a>, 
					<em>BMC Evolutionary Biology</em> 11:361 describes the evolutionary model underlying
					the simulation software.
					</li>
					<p>

					<li> Grahnen and Liberles (2012) <a href="http://www.pagepress.org/journals/index.php/eb/article/view/4394">"CASS: Protein sequence simulation with explicit genotype-phenotype mapping"</a>,
					<em>Trends in Evolutionary Biology</em> 4:1 is an application note describing the
					CASS algorithm and software package in brief.
					</li>
					<p>
					
					<li> Grahnen et al (2012) "Characterizing the structural and functional 
					underpinnings of covarion models" (submitted) describes the interplay 
					between evolutionary rate changes due to functional shifts and those due 
					to compensatory neutral substitutions for folding stability, using data 
					simulated with CASS. Please 
					<a href="mailto:johan.grahnen@biology.gatech.edu">contact the author</a> for a pre-print.
					</li>
					<p>

				</ol>
				Please cite the second reference in any published work employing some or all of our code.
				</p>
			</div>
		</div>
	</body>
</html>
